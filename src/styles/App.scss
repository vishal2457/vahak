@import "src/styles/variables.scss";
$spaceamounts: (
	0: 0px,
	1: 5px,
	2: 10px,
	3: 20px,
	4: 30px,
	5: 50px
);

$directions: (
  top: t,
  bottom: b,
  left: l,
  right: r
);

$types: (
  margin: m,
  padding: p
);

@mixin generate-spacing($type, $direction) {
  @each $name, $space in $spaceamounts {
    .#{map-get($types, $type)}-#{map-get($directions, $direction)}-#{$name} {
      #{$type}-#{$direction}: #{$space};
    }
  }
}

//Mixin calls to generate each type of spacing
//Unused spacing classes can be avoided by simply not including them
@include generate-spacing(margin, bottom);
@include generate-spacing(margin, top);
@include generate-spacing(margin, left);
@include generate-spacing(margin, right);
@include generate-spacing(padding, bottom);
@include generate-spacing(padding, top);
@include generate-spacing(padding, left);
@include generate-spacing(padding, right);


.text-muted {
  color: $text-mute;
}

.text-uppercase {
  text-transform: uppercase;
}

.d-flex {
  display: flex;
}

.justify-content-between {
  justify-content: space-between;
}

.justify-content-center {
  justify-content: center;
}



.pointer {
    cursor: pointer;
}


p{
  margin: 0
}

.w-40 {width: 40%;}
.w-50 {width: 50%;}
.w-60 {width: 60%;}
.w-70 {width: 70%;}
.w-100 {width: 100%;}


.text-center {
  text-align: center !important;
}


.lead {
  font-weight: 700;
}


.col-25 {
  float: left;
  width: 25%;
}

.col-50 {
  float: left;
  width: 50%;
}

.col-50-right {
  float: right;
  width: 47%;
}


.col-75 {
  float: left;
  width: 75%;
}


@media screen and (max-width: 600px) {
  .col-25, .col-75, .col-50, .col-50-right {
    width: 100%;
    margin-top: 0;
  }
}

/* Clear floats after the columns */
.row:after {
  content: "";
  display: table;
  clear: both;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}